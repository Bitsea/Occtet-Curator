/*
 *
 *  Copyright (C) 2025 Bitsea GmbH
 *  *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 *
 *  SPDX-License-Identifier: Apache-2.0
 *  License-Filename: LICENSE
 * /
 *
 */

package eu.occtet.boc.vulnerability.factory;

import eu.occtet.boc.entity.Vulnerability;
import eu.occtet.boc.vulnerability.dao.VulnerabilityRepository;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

@Component
public class VulnerabilityFactory {

    private static final Logger log = LogManager.getLogger(VulnerabilityFactory.class);

    @Autowired
    private VulnerabilityRepository vulnerabilityRepository;

    public Vulnerability create(String vulnerabilityId, String summary, List<String> aliases,
                                Double weightedSeverity, Double exploitability, Double riskScore,
                                List<String> fixedPackages, String sourceUrl, List<String> references) {
        log.info("Creating vulnerability with id:{}, summary:{}, aliases:{}, weightedSeverity:{}, exploitability:{}," +
                        "riskScore:{}, fixedPackages:{}, sourceUrl:{}, references:{}",
                vulnerabilityId, summary, aliases.size(), weightedSeverity, exploitability, riskScore, fixedPackages.size(), sourceUrl, references.size());
        return vulnerabilityRepository.save(new Vulnerability(vulnerabilityId, summary, aliases,
                weightedSeverity, exploitability, riskScore, fixedPackages, sourceUrl, references));
    }
}
